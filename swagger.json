{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Pariti Vending Machine",
    "contact": {
      "email": "oseni_eniola@yahoo.com"
    }
  },
  "servers": [
    {
      "url": "127.0.0.1:3000"
    }
  ],
  "host": "127.0.0.1:3000",
  "basePath": "/",
  "tags": [
    {
      "name": "Health",
      "description": "health check"
    },
    {
      "name": "user",
      "description": "User Operations"
    },
    {
      "name": "Maintenance",
      "description": "Maintenance Transaction"
    }
  ],
  "schemes": ["http", "https"],
  "paths": {
    "/health": {
      "get": {
        "tags": ["Health"],
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful"
          }
        }
      }
    },
    "/user/products": {
      "get": {
        "tags": ["user"],
        "summary": "Get all products",
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful"
          }
        }
      }
    },
    "/user/purchase/{slotId}": {
      "post": {
        "tags": ["user"],
        "summary": "Purchase product in slotid",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "path",
            "name": "slotId",
            "schema": {
              "type": "integer"
            },
            "required":true,
            "minimum":1
          },
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Purchase"
            }
          }         
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/PurchaseRes"
            }
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/maintenance/coins": {
      "get": {
        "tags": ["Maintenance"],
        "summary": "Get all configured coins",
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful"
          }
        }
      }
    },
    "/maintenance/addproduct": {
      "post": {
        "tags": ["Maintenance"],
        "summary": "Add new product",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Item"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/maintenance/totalsales": {
      "get": {
        "tags": ["Maintenance"],
        "summary": "Get amount of total sales",
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful"
          }
        }
      }
    },
    "/maintenance/setcoin": {
      "put": {
        "tags": ["Maintenance"],
        "summary": "update quantity of coin",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Coin"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/maintenance/setprice/{slotId}": {
      "put": {
        "tags": ["Maintenance"],
        "summary": "update price of product",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "path",
            "name": "slotId",
            "schema": {
              "type": "integer"
            },
            "required":true,
            "minimum":1
          },
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": true,
            "schema": {
                "type":"object",
                "properties":{
                  "price": {
                    "type": "number",
                    "format": "double"
                  }
              }
            }
            
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/maintenance/setquantity/{slotId}": {
      "put": {
        "tags": ["Maintenance"],
        "summary": "update setquantity of product",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "path",
            "name": "slotId",
            "schema": {
              "type": "integer"
            },
            "required":true,
            "minimum":1
          },
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": true,
            "schema": {
                "type":"object",
                "properties":{
                  "quantity": {
                    "type": "integer",
                    "format": "int32"
                  }
                }
              }
            }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    }
  },
  "definitions": {
    "Item": {
      "type": "object",
      "properties": {
        "itemName": {
          "type": "string",
          "format": "Bread"
        },
        "quantity": {
          "type": "integer",
          "format": "int32"
        },
        "price": {
          "type": "number",
          "format": "double"
        },
        "description": {
          "type": "string",
          "format": ""
        }
      }
    },
    "Coin": {
      "type": "object",
      "properties": {
        "denomination": {
          "type": "number",
          "format": "double"
        },
        "number": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Purchase": {
      "type": "object",
      "properties": {
        "quanity": {
          "type": "integer",
          "format": "int32"
        },
        "amountPaid": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "PurchaseRes": {
      "type": "object",
      "properties": {
        "product": {
          "type": "string",
          "format": "Name"
        },
        "quanity": {
          "type": "integer",
          "format": "int32"
        },
        "amountPaid": {
          "type": "number",
          "format": "double"
        },
        "productPrice": {
          "type": "number",
          "format": "double"
        },
        "change": {
          "type": "object",
          "*ref": "#/definitions/Change"
        }
      }
    },
    "Change": {
      "type": "object",
      "properties": {
        "denomiation": {
          "type": "number",
          "format": "double"
        },
        "quantity": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "slot": {
      "type": "object",
      "properties": {
        "slotId": {
          "type": "string",
          "format": "1"
        },
        "change": {
          "type": "object",
          "*ref": "#/definitions/Item"
        }
      }
    },
    "Sales": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "*ref": "#/definitions/PurchaseRes"
        },
        "totalsales": {
          "type": "number",
          "format": "double"
        }
      }
    }
  },
  "components": {
    "schemas": {
      "uuid": {
        "type": "string",
        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
        "minLength": 36,
        "maxLength": 36
      }
    }
  }
}
